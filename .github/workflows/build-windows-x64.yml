name: Build Windows x64 RustDesk

on:
  workflow_dispatch:
    inputs:
      upload-artifact:
        description: 'Upload build artifacts'
        type: boolean
        default: true
      upload-tag:
        description: 'Tag for the build'
        type: string
        default: "manual-build"

env:
  SCITER_RUST_VERSION: "1.75"
  RUST_VERSION: "1.75"
  LLVM_VERSION: "15.0.6"
  FLUTTER_VERSION: "3.24.5"
  FLUTTER_RUST_BRIDGE_VERSION: "1.80.1"
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  VCPKG_COMMIT_ID: "6f29f12e82a8293156836ad81cc9bf5af41fe836"
  VERSION: "1.4.0"
  UPLOAD_ARTIFACT: "${{ inputs.upload-artifact }}"
  TAG_NAME: "${{ inputs.upload-tag }}"

jobs:
  build-RustDeskTempTopMostWindow:
    uses: ./.github/workflows/third-party-RustDeskTempTopMostWindow.yml
    with:
      upload-artifact: ${{ inputs.upload-artifact }}
      target: windows-2022
      configuration: Release
      platform: x64
      target_version: Windows10

  build-windows-x64:
    name: Windows x64 Build
    needs: [build-RustDeskTempTopMostWindow]
    runs-on: windows-2022
    steps:
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install flutter rust bridge deps
        shell: bash
        run: |
          cargo install flutter_rust_bridge_codegen --version ${{ env.FLUTTER_RUST_BRIDGE_VERSION }} --features "uuid" --locked

      - name: Generate flutter rust bridge
        shell: bash
        run: |
          ~/.cargo/bin/flutter_rust_bridge_codegen --rust-input ./src/flutter_ffi.rs --dart-output ./flutter/lib/generated_bridge.dart --c-output ./flutter/macos/Runner/bridge_generated.h --class-name RustdeskImpl
          cp ./flutter/macos/Runner/bridge_generated.h ./flutter/ios/Runner/bridge_generated.h

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: ${{ env.LLVM_VERSION }}

      - name: Install flutter
        uses: subosito/flutter-action@v2.12.0
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Replace engine with rustdesk custom flutter engine
        run: |
          flutter doctor -v
          flutter precache --windows
          Invoke-WebRequest -Uri https://github.com/rustdesk/engine/releases/download/main/windows-x64-release.zip -OutFile windows-x64-release.zip
          Expand-Archive -Path windows-x64-release.zip -DestinationPath windows-x64-release
          mv -Force windows-x64-release/*  C:/hostedtoolcache/windows/flutter/stable-${{ env.FLUTTER_VERSION }}-x64/bin/cache/artifacts/engine/windows-x64-release/

      - name: Patch flutter
        shell: bash
        run: |
          cp .github/patches/flutter_3.24.4_dropdown_menu_enableFilter.diff $(dirname $(dirname $(which flutter)))
          cd $(dirname $(dirname $(which flutter)))
          [[ "3.24.5" == ${{env.FLUTTER_VERSION}} ]] && git apply flutter_3.24.4_dropdown_menu_enableFilter.diff

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.SCITER_RUST_VERSION }}
          targets: x86_64-pc-windows-msvc
          components: "rustfmt"

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: windows-2022

      - name: Setup vcpkg with Github Actions binary cache
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: C:\vcpkg
          vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}
          doNotCache: false

      - name: Install vcpkg dependencies
        env:
          VCPKG_DEFAULT_HOST_TRIPLET: x64-windows-static
        run: |
          if ! $VCPKG_ROOT/vcpkg \
            install \
            --triplet x64-windows-static \
            --x-install-root="$VCPKG_ROOT/installed"; then
            find "${VCPKG_ROOT}/" -name "*.log" | while read -r _1; do
              echo "$_1:"
              echo "======"
              cat "$_1"
              echo "======"
              echo ""
            done
            exit 1
          fi
          head -n 100 "${VCPKG_ROOT}/buildtrees/ffmpeg/build-x64-windows-static-rel-out.log" || true
        shell: bash

      - name: Build rustdesk
        run: |
          # Build RustDesk for Windows x64
          python3 .\build.py --portable --hwcodec --flutter --vram
          mv ./flutter/build/windows/x64/runner/Release ./rustdesk

          # Download usbmmidd_v2.zip and extract it to ./rustdesk
          Invoke-WebRequest -Uri https://github.com/rustdesk-org/rdev/releases/download/usbmmidd_v2/usbmmidd_v2.zip -OutFile usbmmidd_v2.zip
          Expand-Archive usbmmidd_v2.zip -DestinationPath .
          Remove-Item -Path usbmmidd_v2\Win32 -Recurse
          Remove-Item -Path "usbmmidd_v2\deviceinstaller64.exe", "usbmmidd_v2\deviceinstaller.exe", "usbmmidd_v2\usbmmidd.bat"
          mv -Force .\usbmmidd_v2 ./rustdesk

          # Printer driver files removed to reduce file size

      - name: Find Runner.res
        run: |
          $runner_res = Get-ChildItem -Path "./rustdesk" -Name "Runner.res" -Recurse -ErrorAction SilentlyContinue
          if ($runner_res) {
              Write-Output "Found Runner.res: $runner_res"
          } else {
              Write-Output "Runner.res not found"
          }

      - name: Download RustDeskTempTopMostWindow artifacts
        if: ${{ inputs.upload-artifact }}
        uses: actions/download-artifact@master
        with:
          name: topmostwindow-artifacts
          path: ./rustdesk

      - name: Upload unsigned files
        if: ${{ inputs.upload-artifact }}
        uses: actions/upload-artifact@master
        with:
          name: rustdesk-unsigned-windows-x86_64
          path: rustdesk

      - name: Rename rustdesk
        if: ${{ inputs.upload-artifact }}
        run: |
          mv rustdesk rustdesk-${{ env.VERSION }}-x86_64.exe

      - name: Upload final executable
        if: ${{ inputs.upload-artifact }}
        uses: actions/upload-artifact@master
        with:
          name: rustdesk-${{ env.VERSION }}-x86_64-exe
          path: rustdesk-${{ env.VERSION }}-x86_64.exe